Eitan Isaacson ||| Eitan Isaacson
eitan@ascender.com ||| eitan @ ascender.com
Peter Parente ||| Peter Parente
pparent@us.ibm.com ||| pparent @ us.ibm.com
Aline Bessa ||| Aline Bessa
alibezz@gmail.com ||| alibezz @ gmail.com
Creative Commons Share Alike 3.0 ||| Creative Commons Share Alike 3.0
5. Schnellauswahl-Plugin ||| 5 . Quick Select Plugin
Das gewünschte Objekt lokalisieren ||| Locating the object you need
Schnellauswahl-Plugin ||| Quick Select Plugin
4. Einstellungennext " xref="event_monitor_plugin ||| 4 . Preferences
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Einrichten von Plugins ||| Configuring plugins
Einstellungen für Plugins ||| Configuring plugins ' preferences
Accerciser ||| Accerciser
Sie können den Einstellungsdialog umgehen , indem Sie ein Plugin von einem an einen anderen Ort ziehen . ||| You may bypass the Preferences dialog by using drag and drop to move a plugin from a location to another .
Einrichten globaler Tastenkürzel ||| Configuring global hotkeys
Einstellungen für globale Tastenkürzel ||| Configuring global hotkeys ' preferences
Einstellungen für Widget-Hervorhebungen ||| Configuring widget 's highlighting
Einstellungen für Hervorhebungen ||| Configuring highlighting preferences
Accerciser ||| Accerciser
2. IPython-Plugin ||| 2 . IPython Plugin
Falls alles andere scheitert ||| When all else fails
IPython-Konsole-Plugin ||| IPython Console Plugin
Das IPython-Konsole-Plugin ausführen ||| Running the IPython Console Plugin
1. Was ist Accerciser ? ||| 1 . What is Accerciser ?
Accerciser ||| Accerciser
Accerciser Accerciser ||| Accerciser Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Informationen über Barrierefreiheit ||| More about Accessibility
2. Schnittstellenanzeige-Plugin ||| 2 . Interface Viewer Plugin
Schnittstellenanzeige-Plugin ||| Interface Viewer Plugin
Das Schnittstellenanzeige-Plugin ausführen ||| Running the Interface Viewer Plugin
translated ||| @ @ image : ' figures / accerciser-logo.png ' ; md5 = ccb260de40944187394405ae163757cf
Accerciser ||| Accerciser
Bevor Sie beginnen ||| Before You Begin
Erste Schritte ||| Getting Started
Themen für Fortgeschrittene ||| Advanced Topics
3. Neue Plugins schreiben ||| 3 . Writing New Plugins
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Erstellen eines Basis-Plugins ||| Creating a Base Plugin
Zunächst verwenden wir folgende Import-Zeilen : ||| First off , the import lines we will use are :
from accerciser.plugin import Plugin import gtk import pyatspi ||| from accerciser.plugin import Plugin import gtk import pyatspi
Anschließend leiten wir eine neue Klasse aus der Basis-Plugin-Klasse ab und ordnen einige obligatorische Klassenattribute zu : ||| Next we will derive a new class from the Plugin base class , and assign some mandatory class attributes :
class FocusSelect(Plugin ) : plugin_name = 'Focus Select ' plugin_description = 'Allows selecting last focused accessible . ' ||| class FocusSelect ( Plugin ) : plugin _ name = ' Focus Select ' plugin _ description = ' Allows selecting last focused accessible . '
def init(self ) : pyatspi . Registry.registerEventListener(self.accEventFocusChanged , 'focus ' ) self.global_hotkeys = [ ( 'Inspect last focused accessible ' , self.inspectLastFocused , gtk.keysyms.e , gtk.gdk . CONTROL_MASK | gtk.gdk . MOD1_MASK ) ] self.last_focused = None ||| def init ( self ) : pyatspi.Registry.registerEventListener ( self.accEventFocusChanged , ' focus ' ) self.global _ hotkeys = [ ( ' Inspect last focused accessible ' , self.inspectLastFocused , gtk.keysyms.e , gtk.gdk.CONTROL _ MASK | gtk.gdk.MOD1 _ MASK ) ] self.last _ focused = None
def accEventFocusChanged(self , event ) : if not self.isMyApp(event.source ) : self.last_focused = event.source ||| def accEventFocusChanged ( self , event ) : if not self.isMyApp ( event.source ) : self.last _ focused = event.source
def inspectLastFocused(self ) : if self.last_focused : self.node.update(self.last_focused ) ||| def inspectLastFocused ( self ) : if self.last _ focused : self.node.update ( self.last _ focused )
Erstellen eines Konsolen-Plugins ||| Creating a Console Plugin
Folgende Import-Zeilen werden benötigt : ||| The needed import lines are :
from accerciser.plugin import ConsolePlugin import pyatspi ||| from accerciser.plugin import ConsolePlugin import pyatspi
class PushButtonFocus(ConsolePlugin ) : plugin_name = 'Push Button Focus ' plugin_description = 'Print event when pushbutton get\\'s focus . ' ||| class PushButtonFocus ( ConsolePlugin ) : plugin _ name = ' Push Button Focus ' plugin _ description = ' Print event when pushbutton get \ \ ' s focus . '
def init(self ) : pyatspi . Registry.registerEventListener(self.accEventFocusChanged , 'focus ' ) ||| def init ( self ) : pyatspi.Registry.registerEventListener ( self.accEventFocusChanged , ' focus ' )
def accEventFocusChanged(self , event ) : if event.source.getRole( ) == pyatspi . ROLE_PUSH_BUTTON : self.appendText(str(event)+'\ ' ) ||| def accEventFocusChanged ( self , event ) : if event.source.getRole ( ) = = pyatspi.ROLE _ PUSH _ BUTTON : self.appendText ( str ( event ) + ' \ ' )
import gtk from accerciser.plugin import ViewportPlugin ||| import gtk from accerciser.plugin import ViewportPlugin
Danach folgt eine Klassendefinition mit Name und Beschreibung : ||| Next , a class definition , with a name and description :
class Clicker(ViewportPlugin ) : plugin_name = 'Clicker ' plugin_description = 'Test the " click " action in relevant accessibles . ' ||| class Clicker ( ViewportPlugin ) : plugin _ name = ' Clicker ' plugin _ description = ' Test the " click " action in relevant accessibles . '
def init(self ) : alignment = gtk . Alignment(0.5,0.5,0,0 ) self.click_button = gtk . Button('Click me ! ' ) alignment.add(self.click_button ) self.plugin_area.add(alignment ) self.click_button.connect('clicked ' , self.onClick ) self.show_all( ) ||| def init ( self ) : alignment = gtk.Alignment ( 0.5,0.5,0,0 ) self.click _ button = gtk.Button ( ' Click me ! ' ) alignment.add ( self.click _ button ) self.plugin _ area.add ( alignment ) self.click _ button.connect ( ' clicked ' , self.onClick ) self.show _ all ( )
def accSupportedActions(self ) : try : ai = self.node.acc.queryAction( ) except NotImplementedError : action_names = [ ] else : action_names = [ ai.getName(i ) for i in xrange(ai.nActions ) ] return action_names ||| def accSupportedActions ( self ) : try : ai = self.node.acc.queryAction ( ) except NotImplementedError : action _ names = [ ] else : action _ names = [ ai.getName ( i ) for i in xrange ( ai.nActions ) ] return action _ names
def onAccChanged(self , acc ) : has_click = 'click ' in self.accSupportedActions( ) self.click_button.set_sensitive(has_click ) ||| def onAccChanged ( self , acc ) : has _ click = ' click ' in self.accSupportedActions ( ) self.click _ button.set _ sensitive ( has _ click )
def onClick(self , button ) : ai = self.node.acc.queryAction( ) action_names = [ ai.getName(i ) for i in xrange(ai.nActions ) ] ai.doAction(action_names.index('click ' ) ) ||| def onClick ( self , button ) : ai = self.node.acc.queryAction ( ) action _ names = [ ai.getName ( i ) for i in xrange ( ai.nActions ) ] ai.doAction ( action _ names.index ( ' click ' ) )
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
cd accerciser ||| cd accerciser
./ autogen.sh # oder ./ configure für die Erstinstallation ||| . / autogen.sh # or . / configure for first time installation
make ||| make
sudo make install # oder make install als Root ||| sudo make install # or make install as root
Accerciser ||| Accerciser
Accerciser accerciser Eingabetaste ||| Accerciser accerciser Return
4. Ereignisüberwachung-Plugin ||| 4 . Event Monitor Plugin
Ereignisüberwachung-Plugin ||| Event Monitor Plugin
Das Ereignisüberwachung-Plugin ausführen ||| Running the Event Monitor Plugin
document ||| document
focus ||| focus
mouse ||| mouse
object ||| object
terminal ||| terminal
window ||| window
1. Anwendungs-Baumansicht ||| 1 . Application Tree View
Erkunden der Accessible-Hierarchie der Arbeitsumgebung ||| Exploring the accessible hierarchy of the desktop
Anwendungs-Baumansicht ||| Application Tree View
Lesezeichen für Objekte in der Anwendungs-Baumansicht anlegen ||| Bookmarking items in the Application Tree View
Accerciser Lesezeichen Lesezeichen hinzufügen Strg d ||| Accerciser Bookmarks Add Bookmark Ctrl d
Accerciser Lesezeichen Lesezeichen verwalten ||| Accerciser Bookmarks Edit Bookmarks
1. API-Browser-Plugin ||| 1 . API Browser Plugin
API-Browser-Plugin ||| API Browser Plugin
Das Schnittstellenbrowser-Plugin ausführen ||| Running the API Browser Plugin
Mario Blättermann ||| translator-credits
Eitan Isaacson ||| Eitan Isaacson
eitan@ascender.com ||| eitan @ ascender.com
Peter Parente ||| Peter Parente
pparent@us.ibm.com ||| pparent @ us.ibm.com
Aline Bessa ||| Aline Bessa
alibezz@gmail.com ||| alibezz @ gmail.com
Creative Commons Share Alike 3.0 ||| Creative Commons Share Alike 3.0
5. Schnellauswahl-Plugin ||| 5 . Quick Select Plugin
Das gewünschte Objekt lokalisieren ||| Locating the object you need
Schnellauswahl-Plugin ||| Quick Select Plugin
4. Einstellungennext " xref="event_monitor_plugin ||| 4 . Preferences
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Einrichten von Plugins ||| Configuring plugins
Einstellungen für Plugins ||| Configuring plugins ' preferences
Accerciser ||| Accerciser
Sie können den Einstellungsdialog umgehen , indem Sie ein Plugin von einem an einen anderen Ort ziehen . ||| You may bypass the Preferences dialog by using drag and drop to move a plugin from a location to another .
Einrichten globaler Tastenkürzel ||| Configuring global hotkeys
Einstellungen für globale Tastenkürzel ||| Configuring global hotkeys ' preferences
Einstellungen für Widget-Hervorhebungen ||| Configuring widget 's highlighting
Einstellungen für Hervorhebungen ||| Configuring highlighting preferences
Accerciser ||| Accerciser
2. IPython-Plugin ||| 2 . IPython Plugin
Falls alles andere scheitert ||| When all else fails
IPython-Konsole-Plugin ||| IPython Console Plugin
Das IPython-Konsole-Plugin ausführen ||| Running the IPython Console Plugin
1. Was ist Accerciser ? ||| 1 . What is Accerciser ?
Accerciser ||| Accerciser
Accerciser Accerciser ||| Accerciser Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Informationen über Barrierefreiheit ||| More about Accessibility
2. Schnittstellenanzeige-Plugin ||| 2 . Interface Viewer Plugin
Schnittstellenanzeige-Plugin ||| Interface Viewer Plugin
Das Schnittstellenanzeige-Plugin ausführen ||| Running the Interface Viewer Plugin
translated ||| @ @ image : ' figures / accerciser-logo.png ' ; md5 = ccb260de40944187394405ae163757cf
Accerciser ||| Accerciser
Bevor Sie beginnen ||| Before You Begin
Erste Schritte ||| Getting Started
Themen für Fortgeschrittene ||| Advanced Topics
3. Neue Plugins schreiben ||| 3 . Writing New Plugins
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Accerciser ||| Accerciser
Erstellen eines Basis-Plugins ||| Creating a Base Plugin
Zunächst verwenden wir folgende Import-Zeilen : ||| First off , the import lines we will use are :
